/**   
 * \par Copyright (C), 2018-2019, MakeBlock
 * \brief   cmd neede to seed to lcd
 * @file    lcd_data.h
 * @author  MakeBlock
 * @version V1.0.0
 * @date    2019/04/29
 * @brief   cmd neede to seed to lcd

 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#include "../../Marlin.h"
#include "lcd_data.h"
/**
 * lcd_cmd.cpp - The cmd that send to dwin lcd
 */
uint8_t CHANGE_PAGE_2[] = {0X5A,0XA5,0X07,0X82,0X00,0X84,0X5A,0X01,0X00,0X02};
uint8_t CHANGE_PAGE_4[] = {0X5A,0XA5,0X07,0X82,0X00,0X84,0X5A,0X01,0X00,0X04};
uint8_t CHANGE_PAGE_A[] = {0X5A,0XA5,0X07,0X82,0X00,0X84,0X5A,0X01,0X00,0X0A};
uint8_t CHANGE_PAGE_D[] = {0X5A,0XA5,0X07,0X82,0X00,0X84,0X5A,0X01,0X00,0X0E};
uint8_t CHANGE_PAGE_11[] = {0X5A,0XA5,0X07,0X82,0X00,0X84,0X5A,0X01,0X00,0X11};
uint8_t CHANGE_PAGE_12[] = {0X5A,0XA5,0X07,0X82,0X00,0X84,0X5A,0X01,0X00,0X12};

uint8_t PAGE1_0_1[] = {0X5A,0XA5,0x11,0x82,0x11,0x00,0x8b,0xf7,0x90,0x09,0x62,0xe9,0x60,0Xa8,0x76,0x84,0x8b,0xed,0x8a,0x00};
uint8_t PAGE1_0_2[] = {0X5A,0XA5, 0X0B,0x82,0x11,0x20, 0X7b, 0X80, 0X4f, 0X53, 0X4e, 0X2d, 0X65,0X87};
uint8_t PAGE1_0_3[] = {0X5A,0XA5,0X11,0x82,0x11,0x30,0x00,0x45,0x00,0x6E,0x00,0x67,0x00,0x6C,0x00,0x69,0x00,0x73,0x00,0x68};

uint8_t PAGE1_1_1[]= {0X5A,0XA5,0X0B,0X82,0X11,0X40,0X60,0Xa8,0X90,0X09,0X62,0Xe9,0X4e,0X86};
uint8_t PAGE1_1_2[] = {0X5A,0XA5,0X0B,0X82,0X11,0X50,0X7b,0X80,0X4f,0X53,0X4e,0X2d,0X65,0X87};

uint8_t PAGE2_0_1[] = {0X5A,0XA5,0X07,0X82,0X11,0X70,0X8f,0Xdb,0X65,0X99};
uint8_t PAGE2_0_2[] = {0x5A,0XA5,0X07,0X82,0X11,0X80,0X90,0X00,0X65,0X99};
uint8_t PAGE2_0_3[] = {0X5A,0XA5,0X07,0X82,0X11,0X60,0X62,0X53,0X53,0X70};
uint8_t PAGE2_0_4[] = {0X5A,0XA5,0X07,0X82,0X11,0X90,0X8b,0Xbe,0X7f,0X6e};
uint8_t PAGE2_0_5[] = {0X5A,0XA5,0X07,0X82,0X11,0XA0,0X51,0X73,0X4e,0X8e};

uint8_t PAGE2_1_1[] = {0X5A,0XA5,0X11,0X82,0X11,0XC0,0X8b,0Xf7,0X63,0Xd2,0X51,0X65,0X60,0Xa8,0X76,0X84,0X00,0X55,0X76,0Xd8};
uint8_t PAGE2_1_2[] = {0X5A,0XA5,0X07,0x82,0x11,0XB0,0X78,0X6e,0X8b,0Xa4};

uint8_t PAGE2_2_1[] = {0X5A,0XA5,0x07,0x82,0x12,0x10,0x8f,0xd4,0x56,0xde};
uint8_t PAGE2_2_2[] = {0X5A,0XA5,0x15,0x82,0x11,0xd0,0x65,0x87,0x4e,0xf6,0x00,0x31,0x00,0x2e,0x00,0x47,0x00,0x43,0x00,0x4F,0x00,0x44,0x00,0x45};
uint8_t PAGE2_2_3[] = {0X5A,0XA5,0x15,0x82,0x11,0xe0,0x65,0x87,0x4e,0xf6,0x00,0x32,0x00,0x2e,0x00,0x47,0x00,0x43,0x00,0x4F,0x00,0x44,0x00,0x45};
uint8_t PAGE2_2_4[] = {0X5A,0XA5,0x15,0x82,0x11,0xf0,0x65,0x87,0x4e,0xf6,0x00,0x33,0x00,0x2e,0x00,0x47,0x00,0x43,0x00,0x4F,0x00,0x44,0x00,0x45};
uint8_t PAGE2_2_5[] = {0X5A,0XA5,0x15,0x82,0x12,0x00,0x65,0x87,0x4e,0xf6,0x00,0x34,0x00,0x2e,0x00,0x47,0x00,0x43,0x00,0x4F,0x00,0x44,0x00,0x45};

uint8_t PAGE2_4_1[] = {0X5A,0XA5,0X07,0x82,0X12,0X20,0X5f,0X00,0X59,0Xcb};
uint8_t PAGE2_4_1_1[] = {0X5A,0XA5,0X07,0x82,0X12,0X20,0X66,0X82,0X50,0X5c};
uint8_t PAGE2_4_2[] = {0X5A,0XA5,0x15,0x82,0x12,0x30,0x65,0x87,0x4e,0xf6,0x00,0x34,0x00,0x2e,0x00,0x47,0x00,0x43,0x00,0x4F,0x00,0x44,0x00,0x45};
uint8_t PAGE2_4_3[] = {0X5A,0XA5,0X07,0X82,0X12,0X40,0X80,0X17,0X65,0Xf6};
uint8_t PAGE2_4_4[] = {0X5A,0XA5,0X13,0X82,0X12,0X50,0X00,0X30,0X00,0X32,0X00,0X3A,0X00,0X32,0X00,0X34,0X00,0X3a,0X00,0X33,0X00,0X36};

uint8_t PAGE2_5_1[] = {0X5A,0XA5,0X0F,0X82,0X12,0X60,0X51,0Xc6,0X59,0X07,0X4e,0X2d,0X00,0X2e,0X00,0X2e,0X00,0X2e};
uint8_t PAGE2_5_2[] = {0X5A,0XA5,0X09,0X82,0X12,0X70,0X00,0X31,0X00,0X31,0X00,0X25};

uint8_t PAGE2_7_1[] = {0X5A,0XA5,0X0B,0X82,0X12,0XC0,0X51,0Xc6,0X59,0X07,0X59,0X31,0X8d,0X25};

uint8_t PAGE2_8_1[] = {0X5A,0XA5,0X11,0X82,0X12,0X80,0X66,0X2f,0X54,0X26,0X50,0X5c,0X6b,0X62,0X62,0X53,0X53,0X70,0Xff,
0X1f};
uint8_t PAGE2_8_2[] = {0X5A,0XA5,0X07,0X82,0X12,0X90,0X53,0Xd6,0X6d,0X88};
uint8_t PAGE2_8_3[] = {0X5A,0XA5,0X07,0X82,0X12,0XA0,0X78,0X6e,0X8b,0Xa4};

uint8_t PAGE2_9_1[] = {0X5A,0XA5,0X0B,0X82,0X12,0XB0,0X62,0X53,0X53,0X70,0X5b,0X8c,0X62,0X10};

/**
 * crc_check array 
 */
const uint8_t lcdCRCH[] = {
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
    0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
    0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
    0x00, 0xC1, 0x81, 0x40
};

const uint8_t lcdCRCL[] = {
    0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 0x07, 0xC7,
    0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD, 0x0F, 0xCF, 0xCE, 0x0E,
    0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09, 0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9,
    0x1B, 0xDB, 0xDA, 0x1A, 0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC,
    0x14, 0xD4, 0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
    0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 0xF2, 0x32,
    0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4, 0x3C, 0xFC, 0xFD, 0x3D,
    0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A, 0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38,
    0x28, 0xE8, 0xE9, 0x29, 0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF,
    0x2D, 0xED, 0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
    0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 0x61, 0xA1,
    0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67, 0xA5, 0x65, 0x64, 0xA4,
    0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F, 0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB,
    0x69, 0xA9, 0xA8, 0x68, 0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA,
    0xBE, 0x7E, 0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
    0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 0x70, 0xB0,
    0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92, 0x96, 0x56, 0x57, 0x97,
    0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C, 0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E,
    0x5A, 0x9A, 0x9B, 0x5B, 0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89,
    0x4B, 0x8B, 0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
    0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 0x43, 0x83,
    0x41, 0x81, 0x80, 0x40
};

/**
 * pucFrame ->buffer need to be crc check
 * len  length of the buffer
 * return value  crc result of the buffer
 */
uint16_t usMBCRC16( uint8_t * pucFrame, uint32_t len )
{
    uint8_t ucCRCHi = 0xFF;
    uint8_t ucCRCLo = 0xFF;
    int iIndex;
    while( len-- )
    {
        iIndex = ucCRCLo ^ *( pucFrame++ );
        ucCRCLo = ( uint8_t )( ucCRCHi ^ lcdCRCH[iIndex] );
        ucCRCHi = lcdCRCL[iIndex];
    }
    return ( uint16_t )( ucCRCLo << 8 | ucCRCHi );
}


